version: 0.2

# In this example, we're using environment variables
# to store the username & password of our Twistlock CI user account
# and the URL to our console

# TL_USER:  The Twistlock user with the CI User role
# TL_PASS:  The password for this user account
# TL_CONSOLE_URL:  The base URL for the console -- http://console.<my_company>.com:8083 -- without a trailing /
"environmentVariables": [
      {
        "name": "IMAGE_REPO_NAME",
        "value": "alpine"
      },
      {
        "name": "IMAGE_TAG",
        "value": "latest"
      }
    ]
phases:
  install:
    runtime-versions:
      docker: 18
  build:
    commands:
      - echo Build started on `date`
       echo Building the Docker image..$IMAGE_TAG          
       docker build -t alpine:latest .
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Downloading twistcli
      - curl -k -u xuwang@paloaltonetworks.com:1234Scan@ --output ./twistcli http://54.193.112.152:8081/api/v1/util/twistcli
      - ls -la
      - chmod +x ./twistcli
      - ls -la
      - echo Scanning with twistcli
      
      # Run the scan with twistcli, providing detailed results in CodeBuild and
      # pushing the results to the Twistlock console.
      # --details returns all vulnerabilities & compliance issues rather than just summaries.
      # -address points to our Twistlock console
      # -u and -p provide credentials for the console.  These creds only need the CI User role.
      # Finally, we provide the name of the image we built with 'docker build', above.
      - sudo service docker start
      - docker ps 
      - ps aux | grep docker | grep daemon  
      - ./twistcli images scan --details -address http://54.193.112.152:8081 -u xuwang@paloaltonetworks.com -p 1234Scan@ alpine:latest

      # Add --vulnerability-threshold and/or --compliance-threshold to this command to
      # fail builds based on the thresholds.
      # See twistcli documentation for more details.
